{"ast":null,"code":"var _jsxFileName = \"/home/daniel/github_projects/independent_lab/react-is-fun/src/containers/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport TickerList from \"./tickerList.js\";\nimport Registration from \"./Registration\";\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.RouterElement = () => React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Stock picker\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/topics\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Registration\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: TickerList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/topics\",\n      component: Registration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n\n    this.Home = () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Home\"));\n\n    this.About = () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"About\"));\n\n    this.Topics = ({\n      match\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Topics\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\".concat(match.url, \"/rendering\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Rendering with React\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\".concat(match.url, \"/components\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Components\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\".concat(match.url, \"/props-v-state\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Props v. State\"))), React.createElement(Route, {\n      path: \"\".concat(match.url, \"/:topicId\"),\n      component: Topic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: match.url,\n      render: () => React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Please select a topic.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n\n    this.Topic = ({\n      match\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, match.params.topicId));\n\n    this.state = {\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {}\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n  /*\n  checkLoginStatus() {\n   axios\n     .get(\"http://localhost:3001/logged_in\", { withCredentials: true })\n     .then(response => {\n       if (\n         response.data.logged_in &&\n         this.state.loggedInStatus === \"NOT_LOGGED_IN\"\n       ) {\n         this.setState({\n           loggedInStatus: \"LOGGED_IN\",\n           user: response.data.user\n         });\n       } else if (\n         !response.data.logged_in &\n         (this.state.loggedInStatus === \"LOGGED_IN\")\n       ) {\n         this.setState({\n           loggedInStatus: \"NOT_LOGGED_IN\",\n           user: {}\n         });\n       }\n     })\n     .catch(error => {\n       console.log(\"check login error\", error);\n     });\n  }\n  componentDidMount() {\n   this.checkLoginStatus();\n  }\n  */\n\n\n  handleLogout() {\n    this.setState({\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {}\n    });\n  }\n\n  handleLogin(data) {\n    this.setState({\n      loggedInStatus: \"LOGGED_IN\",\n      user: data.user\n    });\n  }\n  /*\n  render() {\n    return (\n      <div className=\"app\">\n        <BrowserRouter>\n          <Switch>\n            <Route\n              exact\n              path={\"/\"}\n              render={props => (\n                <Home\n                  {...props}\n                  handleLogin={this.handleLogin}\n                  handleLogout={this.handleLogout}\n                  loggedInStatus={this.state.loggedInStatus}\n                />\n              )}\n            />\n            <Route\n              exact\n              path={\"/dashboard\"}\n              render={props => (\n                <Dashboard\n                  {...props}\n                  loggedInStatus={this.state.loggedInStatus}\n                />\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n  }\n  */\n\n\n  render() {\n    return React.createElement(RouterElement, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/daniel/github_projects/independent_lab/react-is-fun/src/containers/App.js"],"names":["React","Component","BrowserRouter","Switch","Route","axios","Router","Link","Login","TickerList","Registration","App","constructor","RouterElement","Home","About","Topics","match","url","Topic","params","topicId","state","loggedInStatus","user","handleLogin","bind","handleLogout","setState","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { BrowserRouter as Router,  Link } from \"react-router-dom\";\nimport Login from \"./Login\"\nimport TickerList from \"./tickerList.js\"\nimport Registration from \"./Registration\"\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {}\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n   /*\n  checkLoginStatus() {\n    axios\n      .get(\"http://localhost:3001/logged_in\", { withCredentials: true })\n      .then(response => {\n        if (\n          response.data.logged_in &&\n          this.state.loggedInStatus === \"NOT_LOGGED_IN\"\n        ) {\n          this.setState({\n            loggedInStatus: \"LOGGED_IN\",\n            user: response.data.user\n          });\n        } else if (\n          !response.data.logged_in &\n          (this.state.loggedInStatus === \"LOGGED_IN\")\n        ) {\n          this.setState({\n            loggedInStatus: \"NOT_LOGGED_IN\",\n            user: {}\n          });\n        }\n      })\n      .catch(error => {\n        console.log(\"check login error\", error);\n      });\n  }\n\n  componentDidMount() {\n    this.checkLoginStatus();\n  }\n\n  */\n\n  RouterElement = () => (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Login</Link>\n          </li>   \n          <li>\n            <Link to=\"/about\">Stock picker</Link>\n          </li>\n          <li>\n            <Link to=\"/topics\">Registration</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/about\" component={TickerList} />\n        <Route path=\"/topics\" component={Registration} />\n      </div>\n    </Router>\n  );\n\n  Home = () => (\n    <div>\n      <h2>Home</h2>\n    </div>\n  );\n  \n  About = () => (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n  \n  Topics = ({ match }) => (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n  \n      <Route path={`${match.url}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.url}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n  \n  Topic = ({ match }) => (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n  \n\n  handleLogout() {\n    this.setState({\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {}\n    });\n  }\n\n  handleLogin(data) {\n    this.setState({\n      loggedInStatus: \"LOGGED_IN\",\n      user: data.user\n    });\n  }\n\n  /*\n  render() {\n    return (\n      <div className=\"app\">\n        <BrowserRouter>\n          <Switch>\n            <Route\n              exact\n              path={\"/\"}\n              render={props => (\n                <Home\n                  {...props}\n                  handleLogin={this.handleLogin}\n                  handleLogout={this.handleLogout}\n                  loggedInStatus={this.state.loggedInStatus}\n                />\n              )}\n            />\n            <Route\n              exact\n              path={\"/dashboard\"}\n              render={props => (\n                <Dashboard\n                  {...props}\n                  loggedInStatus={this.state.loggedInStatus}\n                />\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\n*/\n\n  render(){\n    return(<RouterElement/>);\n  }}\n"]},"metadata":{},"sourceType":"module"}