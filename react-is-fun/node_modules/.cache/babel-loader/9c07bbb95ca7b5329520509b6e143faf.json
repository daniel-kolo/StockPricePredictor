{"ast":null,"code":"var _jsxFileName = \"/home/daniel/git_repos/independent_lab/react-is-fun/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Login from \"./containers/Login\";\nimport axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { tsParenthesizedType } from '@babel/types';\n\nclass Message extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: this.props.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.msg), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"I'll check back in \", this.props.minutes, \" minutes\"));\n  }\n\n}\n\nclass TickerList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tickers: []\n    };\n  }\n\n  componentWillMount() {\n    axios.get(\"http://localhost:8080/tickerList\", {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      let tickers = [];\n      /*\n      for (let i = 0; i<res.data.length; i++){\n          tickers.push(res.data[i], key = i)\n      }\n       this.setState({tickers: tickers});*/\n    });\n  }\n\n  getlist() {\n    console.log(this.state.tickers);\n    /*for (let i = 0; i<this.state.tickers.length;i++){\n        console.log(this.state.tickers[i])\n    }*/\n  }\n\n  render() {\n    //console.log(this.state.tickers.tpye)\n    const numbers = [1, 2, 3, 4, 5];\n    const listItems = numbers.map(number => React.createElement(\"li\", {\n      key: number.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, number));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Dropdown Button\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.tickers.map(ticker => React.createElement(Dropdown.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, ticker)))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, listItems));\n  }\n\n}\n\nclass DropdownTest extends React.Component {\n  constructor() {\n    super();\n    this.data = ['asd', 'asd2'];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Hello World\"), React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Dropdown Button\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.data.map(size => React.createElement(Dropdown.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, size)))));\n  }\n\n}\n\nReactDOM.render( //<Message color=\"blue\" msg=\"How are you?\" minutes={5} />,\n//<Login/>,\n//<TickerList/>,\nReact.createElement(TickerList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/daniel/git_repos/independent_lab/react-is-fun/src/index.js"],"names":["React","ReactDOM","Login","axios","Dropdown","DropdownButton","tsParenthesizedType","Message","Component","render","color","props","msg","minutes","TickerList","constructor","state","tickers","componentWillMount","get","headers","then","res","getlist","console","log","numbers","listItems","map","number","toString","ticker","DropdownTest","data","size","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Login from \"./containers/Login\"\nimport axios from 'axios'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { tsParenthesizedType } from '@babel/types'\n\nclass Message extends React.Component{\n    render(){\n        return (\n            <div>\n                <h1 style = {{color: this.props.color}}>\n                {this.props.msg}\n                </h1>\n                <p>\n                    I'll check back in {this.props.minutes} minutes\n                </p>\n            </div>\n        )\n    }\n}\n\n\nclass TickerList extends React.Component{\n    constructor() {\n        super();\n        this.state = {tickers : []};\n        \n    }\n    \n    \n    componentWillMount() {\n        axios.get(\"http://localhost:8080/tickerList\",\n        { headers: {'Content-Type': 'application/json'}}).then(res => {\n            let tickers = []\n            /*\n            for (let i = 0; i<res.data.length; i++){\n                tickers.push(res.data[i], key = i)\n            }\n\n            this.setState({tickers: tickers});*/\n          });\n\n        \n    }\n\n    getlist() {\n        console.log(this.state.tickers)\n        /*for (let i = 0; i<this.state.tickers.length;i++){\n            console.log(this.state.tickers[i])\n        }*/\n    }\n    \n    render(){\n        //console.log(this.state.tickers.tpye)\n        const numbers = [1, 2, 3, 4, 5];\n        const listItems = numbers.map((number) =>\n        <li key={number.toString()}>\n            {number}\n        </li>\n        );\n        return (\n                <div>\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Dropdown Button\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                        {this.state.tickers.map(ticker => (\n                            <Dropdown.Item>{ticker}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <li>{listItems}</li>\n                </div>\n        )\n    }\n}\n\nclass DropdownTest extends React.Component{\n    constructor() {\n        super()\n        this.data = ['asd', 'asd2']\n    }\n    render(){\n        return (\n            <div>\n                <p>Hello World</p>\n                \n                <Dropdown>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        Dropdown Button\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                    {this.data.map(size => (\n                        <Dropdown.Item>{size}</Dropdown.Item>\n                        ))}\n                    </Dropdown.Menu>\n                </Dropdown>\n                \n            </div>\n        )               \n    }\n}\n\n\n\n\n\nReactDOM.render(\n    //<Message color=\"blue\" msg=\"How are you?\" minutes={5} />,\n    //<Login/>,\n    //<TickerList/>,\n    <TickerList/>,\n    document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}