{"ast":null,"code":"var _jsxFileName = \"/home/daniel/git_repos/independent_lab/react-is-fun/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Login from \"./containers/Login\";\nimport axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { tsParenthesizedType } from '@babel/types';\n\nclass Message extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: this.props.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.msg), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"I'll check back in \", this.props.minutes, \" minutes\"));\n  }\n\n}\n\nclass TickerList extends React.Component {\n  constructor() {\n    super();\n    let tickers = [];\n    axios.get(\"http://localhost:8080/tickerList\", {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      let tickerList = response.data[0].split(',');\n      let list1 = [\"asd\", \"asd1\"];\n      console.log(tickerList.type);\n      console.log(list1.type);\n\n      for (var i = 0; i < tickerList.length; i++) {\n        tickers.push(tickerList[i]); //console.log(String(tickerList[i]))\n      } //console.log(tickerList.type)\n\n    });\n    this.state = {\n      tickers: tickers\n    }; //console.log(this.state.tickers)\n    //console.log(this.state.tickers.type);\n    //console.log(this.state.tickers.type);\n  }\n  /*\n  componentWillMount() {\n      //this.getDataAxios()\n  }\n   async getDataAxios(){\n      const response =\n        await axios.get(\"http://localhost:8080/tickerList\",\n        { headers: {'Content-Type': 'application/json'}})\n      \n      //this.response = new Array(String(response.data[0]).split(\",\"))\n      \n      \n      this.response = (response.data[0].split(','))\n      \n      console.log(this.response.length)\n      for (let i = 0; i<this.response.length;i++){\n          console.log(this.response[i])\n          console.log(\"hey\")\n      }\n  }*/\n\n\n  render() {\n    const _Array = Array(this.state.tickers),\n          tickers = _Array.tickers; //console.log(this.state.tickers[0].length)\n\n    /*for (let i = 0; i<tickers.length;i++){\n        console.log(tickers[i])\n        console.log(\"here\")\n    }*/\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass DropdownTest extends React.Component {\n  constructor() {\n    super();\n    this.data = ['asd', 'asd2'];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Hello World\"), React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Dropdown Button\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.data.map(size => React.createElement(Dropdown.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, size)))));\n  }\n\n}\n\nReactDOM.render( //<Message color=\"blue\" msg=\"How are you?\" minutes={5} />,\n//<Login/>,\n//<TickerList/>,\nReact.createElement(TickerList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/daniel/git_repos/independent_lab/react-is-fun/src/index.js"],"names":["React","ReactDOM","Login","axios","Dropdown","DropdownButton","tsParenthesizedType","Message","Component","render","color","props","msg","minutes","TickerList","constructor","tickers","get","headers","then","response","tickerList","data","split","list1","console","log","type","i","length","push","state","Array","DropdownTest","map","size","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Login from \"./containers/Login\"\nimport axios from 'axios'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { tsParenthesizedType } from '@babel/types'\n\nclass Message extends React.Component{\n    render(){\n        return (\n            <div>\n                <h1 style = {{color: this.props.color}}>\n                {this.props.msg}\n                </h1>\n                <p>\n                    I'll check back in {this.props.minutes} minutes\n                </p>\n            </div>\n        )\n    }\n}\n\n\nclass TickerList extends React.Component{\n    constructor() {\n        super();\n        let tickers = [];\n        axios.get(\"http://localhost:8080/tickerList\",\n        { headers: {'Content-Type': 'application/json'}}).then((response) => {\n            let tickerList = response.data[0].split(',')\n            let list1 = [\"asd\", \"asd1\"]\n            console.log(tickerList.type)\n            console.log(list1.type)\n            for (var i = 0; i < tickerList.length; i++) {\n                tickers.push(tickerList[i])\n                //console.log(String(tickerList[i]))\n            }\n\n            //console.log(tickerList.type)\n        })\n\n       this.state = {tickers: tickers};\n       //console.log(this.state.tickers)\n       //console.log(this.state.tickers.type);\n       \n       //console.log(this.state.tickers.type);\n       \n    \n    }\n    /*\n    componentWillMount() {\n        //this.getDataAxios()\n    }\n\n    async getDataAxios(){\n        const response =\n          await axios.get(\"http://localhost:8080/tickerList\",\n          { headers: {'Content-Type': 'application/json'}})\n        \n        //this.response = new Array(String(response.data[0]).split(\",\"))\n        \n        \n        this.response = (response.data[0].split(','))\n        \n        console.log(this.response.length)\n        for (let i = 0; i<this.response.length;i++){\n            console.log(this.response[i])\n            console.log(\"hey\")\n        }\n    }*/\n    \n    render(){\n        const {tickers} = Array(this.state.tickers)\n        //console.log(this.state.tickers[0].length)\n        /*for (let i = 0; i<tickers.length;i++){\n            console.log(tickers[i])\n            console.log(\"here\")\n        }*/\n\n        return (\n            <div>\n                \n                \n                 \n            </div>\n        )\n    }\n}\n\nclass DropdownTest extends React.Component{\n    constructor() {\n        super()\n        this.data = ['asd', 'asd2']\n    }\n    render(){\n        return (\n            <div>\n                <p>Hello World</p>\n                \n                <Dropdown>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        Dropdown Button\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                    {this.data.map(size => (\n                        <Dropdown.Item>{size}</Dropdown.Item>\n                        ))}\n                    </Dropdown.Menu>\n                </Dropdown>\n                \n            </div>\n        )               \n    }\n}\n\n\n\n\n\nReactDOM.render(\n    //<Message color=\"blue\" msg=\"How are you?\" minutes={5} />,\n    //<Login/>,\n    //<TickerList/>,\n    <TickerList/>,\n    document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}