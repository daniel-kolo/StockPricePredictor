{"ast":null,"code":"var _jsxFileName = \"/home/daniel/git_repos/independent_lab/react-is-fun/src/containers/App.js\";\nimport React, { Component } from \"react\";\nimport Login from \"./Login\";\nimport TickerList from \"./tickerList.js\";\nimport Registration from \"./Registration\";\nimport Nav from \"./Nav\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      token: \"\"\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleOnClick = this.handleOnClick.bind(this);\n  }\n\n  handleOnClick(ticker) {\n    console.log(\"ticker clicked: \", ticker);\n  }\n  /*\n  checkLoginStatus() {\n   axios\n     .get(\"http://localhost:3001/logged_in\", { withCredentials: true })\n     .then(response => {\n       if (\n         response.data.logged_in &&\n         this.state.loggedInStatus === \"NOT_LOGGED_IN\"\n       ) {\n         this.setState({\n           loggedInStatus: \"LOGGED_IN\",\n           user: response.data.user\n         });\n       } else if (\n         !response.data.logged_in &\n         (this.state.loggedInStatus === \"LOGGED_IN\")\n       ) {\n         this.setState({\n           loggedInStatus: \"NOT_LOGGED_IN\",\n           user: {}\n         });\n       }\n     })\n     .catch(error => {\n       console.log(\"check login error\", error);\n     });\n  }\n  componentDidMount() {\n   this.checkLoginStatus();\n  }\n  */\n\n\n  handleLogout() {\n    this.setState({\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {}\n    });\n  }\n\n  handleLogin(data) {\n    this.setState({\n      loggedInStatus: \"LOGGED_IN\",\n      token: data.data.token\n    });\n    console.log(\"logged in succesfully\");\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => React.createElement(Registration, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        handleLogout: this.handleLogout,\n        loggedInStatus: this.state.loggedInStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        handleLogout: this.handleLogout,\n        loggedInStatus: this.state.loggedInStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/predict\",\n      render: props => React.createElement(TickerList, Object.assign({}, props, {\n        handleOnClick: this.handleOnClick,\n        loggedInStatus: this.state.loggedInStatus,\n        token: this.state.token,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/daniel/git_repos/independent_lab/react-is-fun/src/containers/App.js"],"names":["React","Component","Login","TickerList","Registration","Nav","BrowserRouter","Router","Switch","Route","App","constructor","state","loggedInStatus","token","handleLogin","bind","handleLogout","handleOnClick","ticker","console","log","setState","user","data","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Login from \"./Login\"\nimport TickerList from \"./tickerList.js\"\nimport Registration from \"./Registration\"\nimport Nav from \"./Nav\";\nimport {BrowserRouter as Router ,Switch, Route} from 'react-router-dom'; \n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      token: \"\"\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleOnClick = this.handleOnClick.bind(this);\n\n  }\n\n\n  handleOnClick(ticker){\n    console.log(\"ticker clicked: \", ticker)\n  }\n   /*\n  checkLoginStatus() {\n    axios\n      .get(\"http://localhost:3001/logged_in\", { withCredentials: true })\n      .then(response => {\n        if (\n          response.data.logged_in &&\n          this.state.loggedInStatus === \"NOT_LOGGED_IN\"\n        ) {\n          this.setState({\n            loggedInStatus: \"LOGGED_IN\",\n            user: response.data.user\n          });\n        } else if (\n          !response.data.logged_in &\n          (this.state.loggedInStatus === \"LOGGED_IN\")\n        ) {\n          this.setState({\n            loggedInStatus: \"NOT_LOGGED_IN\",\n            user: {}\n          });\n        }\n      })\n      .catch(error => {\n        console.log(\"check login error\", error);\n      });\n  }\n\n  componentDidMount() {\n    this.checkLoginStatus();\n  }\n\n  */\n\n  handleLogout() {\n    this.setState({\n      loggedInStatus: \"NOT_LOGGED_IN\",\n      user: {}\n    });\n  }\n\n  handleLogin(data) {\n    this.setState({\n      loggedInStatus: \"LOGGED_IN\",\n      token: data.data.token\n    });\n\n    console.log(\"logged in succesfully\");\n  }\n\n  render(){\n    return(\n      <Router>\n        <div className = \"App\">\n          <Nav/>\n          <Switch>\n            <Route path=\"/\" exact render= {props => (\n                <Registration\n                  {...props}\n                  handleLogin={this.handleLogin}\n                  handleLogout={this.handleLogout}\n                  loggedInStatus={this.state.loggedInStatus}\n                />\n                )}\n            />\n            <Route path=\"/login\" render={props =>(\n              <Login {...props}\n                handleLogin={this.handleLogin}\n                handleLogout={this.handleLogout}\n                loggedInStatus={this.state.loggedInStatus}\n              />\n              )}\n            />\n            <Route path=\"/predict\" render={props =>(\n              <TickerList {...props}\n                handleOnClick = {this.handleOnClick}\n                loggedInStatus={this.state.loggedInStatus}\n                token = {this.state.token}\n              />\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n        \n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}