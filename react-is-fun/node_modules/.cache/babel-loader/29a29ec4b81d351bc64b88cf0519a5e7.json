{"ast":null,"code":"var _jsxFileName = \"/home/daniel/git_repos/independent_lab/react-is-fun/src/containers/Prediction.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport \"./Prediction.css\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.SimpleList = () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"The predictions for the following 5 days:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.predictions.map(function (item) {\n      return React.createElement(\"li\", {\n        key: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, item);\n    })));\n\n    this.state = {\n      predictions: []\n    };\n  }\n\n  componentWillMount() {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.props.token\n    };\n    const data = {\n      \"ticker\": this.props.ticker\n    };\n    axios.post(\"http://localhost:8080/prediction\", {\n      headers: headers,\n      data: data\n    }).then(response => {\n      this.setState({\n        predictions: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    }); //event.preventDefault();\n  }\n\n  render() {\n    console.log(this.state.predictions);\n\n    if (this.props.predicted == true) {\n      return this.SimpleList();\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"PICK A PREDICTION FOOL\"));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/daniel/git_repos/independent_lab/react-is-fun/src/containers/Prediction.js"],"names":["React","Component","axios","App","constructor","props","SimpleList","state","predictions","map","item","componentWillMount","headers","token","data","ticker","post","then","response","setState","catch","error","console","log","render","predicted"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACvCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA4BlBC,UA5BkB,GA4BL,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAL,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2B,UAASC,IAAT,EAAe;AACzC,aAAO;AAAI,QAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgBA,IAAhB,CAAP;AACD,KAFA,CADH,CADA,CA7Bc;;AAGd,SAAKH,KAAL,GAAY;AACRC,MAAAA,WAAW,EAAG;AADN,KAAZ;AAGH;;AAEDG,EAAAA,kBAAkB,GAAE;AAChB,UAAMC,OAAO,GAAG;AACZ,sBAAgB,kBADJ;AAEZ,uBAAiB,YAAY,KAAKP,KAAL,CAAWQ;AAF5B,KAAhB;AAKA,UAAMC,IAAI,GAAG;AACT,gBAAU,KAAKT,KAAL,CAAWU;AADZ,KAAb;AAIAb,IAAAA,KAAK,CAACc,IAAN,CAAW,kCAAX,EACA;AAAEJ,MAAAA,OAAO,EAAEA,OAAX;AAAoBE,MAAAA,IAAI,EAAEA;AAA1B,KADA,EACkCG,IADlC,CACuCC,QAAQ,IAAI;AAC/C,WAAKC,QAAL,CAAc;AAACX,QAAAA,WAAW,EAAEU,QAAQ,CAACJ;AAAvB,OAAd;AAEH,KAJD,EAIGM,KAJH,CAISC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAND,EAVgB,CAiBhB;AACH;;AAYDG,EAAAA,MAAM,GAAE;AAEJF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,WAAvB;;AACA,QAAI,KAAKH,KAAL,CAAWoB,SAAX,IAAwB,IAA5B,EAAiC;AAC7B,aAEI,KAAKnB,UAAL,EAFJ;AAIH,KALD,MAKM;AACF,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ;AAKH;AAEJ;;AAvDsC","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport \"./Prediction.css\"\n\nexport default class App extends Component {\n    constructor(props){\n        super(props);\n\n        this.state ={\n            predictions : []\n        }\n    }\n\n    componentWillMount(){\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + this.props.token\n          }\n\n        const data = {\n            \"ticker\": this.props.ticker\n        }\n\n        axios.post(\"http://localhost:8080/prediction\",\n        { headers: headers, data: data }).then(response => {\n            this.setState({predictions: response.data})\n            \n        }).catch(error => {\n            console.log(error);\n        });\n        //event.preventDefault();\n    }\n\n    SimpleList = () => (\n        <div><h1>The predictions for the following 5 days:</h1>\n        <ul>\n          {this.state.predictions.map(function(item) {\n            return <li key={item}>{item}</li>;\n          })}\n        </ul>\n        </div>\n      );\n\n    render(){\n\n        console.log(this.state.predictions)\n        if (this.props.predicted == true){\n            return (\n                \n                this.SimpleList()\n            )\n        } else{\n            return(\n                <div>\n                    <h1>PICK A PREDICTION FOOL</h1>\n                </div>\n            )\n        }\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}