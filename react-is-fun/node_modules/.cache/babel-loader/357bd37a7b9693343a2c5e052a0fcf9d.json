{"ast":null,"code":"var _jsxFileName = \"/home/daniel/git_repos/independent_lab/react-is-fun/src/containers/Prediction.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      predictions: []\n    };\n  }\n\n  componentWillMount() {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.props.token\n    };\n    const data = {\n      \"ticker\": this.props.ticker\n    };\n    axios.post(\"http://localhost:8080/prediction\", {\n      headers: headers,\n      data: data\n    }).then(response => {\n      console.log(response.data);\n      this.setState({\n        predictions: response.data\n      }); //this.props.handleLogin(response)\n    }).catch(error => {\n      console.log(error);\n    }); //event.preventDefault();\n  }\n\n  render() {\n    console.log(this.state.predictions);\n\n    if (this.props.predicted == true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, props.items.map((item, index) => React.createElement(Item, {\n        key: index,\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"PICK A PREDICTION FOOL\"));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/daniel/git_repos/independent_lab/react-is-fun/src/containers/Prediction.js"],"names":["React","Component","axios","App","constructor","props","state","predictions","componentWillMount","headers","token","data","ticker","post","then","response","console","log","setState","catch","error","render","predicted","items","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACvCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAY;AACRC,MAAAA,WAAW,EAAG;AADN,KAAZ;AAGH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,UAAMC,OAAO,GAAG;AACZ,sBAAgB,kBADJ;AAEZ,uBAAiB,YAAY,KAAKJ,KAAL,CAAWK;AAF5B,KAAhB;AAKA,UAAMC,IAAI,GAAG;AACT,gBAAU,KAAKN,KAAL,CAAWO;AADZ,KAAb;AAIAV,IAAAA,KAAK,CAACW,IAAN,CAAW,kCAAX,EACA;AAAEJ,MAAAA,OAAO,EAAEA,OAAX;AAAoBE,MAAAA,IAAI,EAAEA;AAA1B,KADA,EACkCG,IADlC,CACuCC,QAAQ,IAAI;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACJ,IAArB;AACA,WAAKO,QAAL,CAAc;AAACX,QAAAA,WAAW,EAAEQ,QAAQ,CAACJ;AAAvB,OAAd,EAF+C,CAG/C;AACH,KALD,EAKGQ,KALH,CAKSC,KAAK,IAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,KAPD,EAVgB,CAkBhB;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAEJL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,WAAvB;;AACA,QAAI,KAAKF,KAAL,CAAWiB,SAAX,IAAwB,IAA5B,EAAiC;AAC7B,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKjB,KAAK,CAACkB,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KACb,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADL,CADJ;AAOH,KARD,MAQM;AACF,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ;AAKH;AAEJ;;AAjDsC","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\n\nexport default class App extends Component {\n    constructor(props){\n        super(props);\n\n        this.state ={\n            predictions : []\n        }\n    }\n\n    componentWillMount(){\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + this.props.token\n          }\n\n        const data = {\n            \"ticker\": this.props.ticker\n        }\n\n        axios.post(\"http://localhost:8080/prediction\",\n        { headers: headers, data: data }).then(response => {\n            console.log(response.data);\n            this.setState({predictions: response.data})\n            //this.props.handleLogin(response)\n        }).catch(error => {\n            console.log(error);\n        });\n        //event.preventDefault();\n    }\n\n    render(){\n\n        console.log(this.state.predictions)\n        if (this.props.predicted == true){\n            return (\n                <div>\n                    {props.items.map((item, index) => (\n                        <Item key={index} item={item} />\n                    ))}\n                </div>\n            )\n        } else{\n            return(\n                <div>\n                    <h1>PICK A PREDICTION FOOL</h1>\n                </div>\n            )\n        }\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}