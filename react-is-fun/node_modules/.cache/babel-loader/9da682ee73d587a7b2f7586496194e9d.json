{"ast":null,"code":"var _jsxFileName = \"/home/daniel/git_repos/independent_lab/react-is-fun/src/containers/tickerList.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class TickerList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tickers: []\n    };\n  }\n\n  componentWillMount() {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.props.token\n    }; //console.log(headers)\n\n    axios.get(\"http://localhost:8080/tickerList\", {\n      headers: headers\n    }).then(res => {\n      let tickersFromApi = res.data.map(ticker => {\n        return {\n          value: ticker,\n          display: ticker\n        };\n      });\n      this.setState({\n        tickers: [{\n          value: '',\n          display: '(Select your ticker)'\n        }].concat(tickersFromApi)\n      });\n      /*\n      let data = res.data[0].split(\",\")\n      this.setState({tickers: res.data[0].split(\",\")})\n      const tickers = data.map((ticker,index) =>\n      \n      <Dropdown.Item href={\"/tickers/\"+ticker} key={index}  >{ticker}</Dropdown.Item>\n      );*/\n      //this.setState({tickers: tickers});\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    console.log(this.state.tickers);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.tickers.map(ticker => React.createElement(\"option\", {\n      key: ticker.value,\n      value: ticker.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, ticker.display))));\n  }\n\n}\n/*\n<div>\n                    <h1>Choose a stock to predict</h1>\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Stock tickers\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {this.state.tickers}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    \n                </div>\n*/","map":{"version":3,"sources":["/home/daniel/git_repos/independent_lab/react-is-fun/src/containers/tickerList.js"],"names":["React","Component","axios","Dropdown","TickerList","constructor","props","state","tickers","componentWillMount","headers","token","get","then","res","tickersFromApi","data","map","ticker","value","display","setState","concat","catch","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,sCAAP;AAEA,eAAe,MAAMC,UAAN,SAAyBH,SAAzB,CAAkC;AAC7CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG;AADD,KAAb;AAGH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,OAAO,GAAG;AACZ,sBAAgB,kBADJ;AAEZ,uBAAiB,YAAY,KAAKJ,KAAL,CAAWK;AAF5B,KAAhB,CADiB,CAMjB;;AAEAT,IAAAA,KAAK,CAACU,GAAN,CAAU,kCAAV,EACA;AAAEF,MAAAA,OAAO,EAAEA;AAAX,KADA,EAECG,IAFD,CAEMC,GAAG,IAAI;AACT,UAAIC,cAAc,GAAGD,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAaC,MAAM,IAAI;AAAE,eAAO;AAACC,UAAAA,KAAK,EAAED,MAAR;AAAgBE,UAAAA,OAAO,EAAEF;AAAzB,SAAP;AAAyC,OAAlE,CAArB;AACA,WAAKG,QAAL,CAAc;AAAEb,QAAAA,OAAO,EAAE,CAAC;AAACW,UAAAA,KAAK,EAAE,EAAR;AAAYC,UAAAA,OAAO,EAAE;AAArB,SAAD,EAA+CE,MAA/C,CAAsDP,cAAtD;AAAX,OAAd;AACA;;;;;;;AAOA;AACD,KAbH,EAaKQ,KAbL,CAaWC,KAAK,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAfH;AAgBH;;AAEDG,EAAAA,MAAM,GAAE;AAEJF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWC,OAAvB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWC,OAAX,CAAmBS,GAAnB,CAAwBC,MAAD,IAAY;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,KAApB;AAA2B,MAAA,KAAK,EAAED,MAAM,CAACC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDD,MAAM,CAACE,OAAxD,CAAnC,CADH,CADA,CADJ;AAOH;;AA7C4C;AA+CjD","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class TickerList extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            tickers : []\n        };\n    }\n    \n    componentWillMount() {\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + this.props.token\n          }\n        \n        //console.log(headers)\n\n        axios.get(\"http://localhost:8080/tickerList\",\n        { headers: headers })\n        .then(res => {\n            let tickersFromApi = res.data.map(ticker => { return {value: ticker, display: ticker} })\n            this.setState({ tickers: [{value: '', display: '(Select your ticker)'}].concat(tickersFromApi)});\n            /*\n            let data = res.data[0].split(\",\")\n            this.setState({tickers: res.data[0].split(\",\")})\n            const tickers = data.map((ticker,index) =>\n            \n            <Dropdown.Item href={\"/tickers/\"+ticker} key={index}  >{ticker}</Dropdown.Item>\n            );*/\n            //this.setState({tickers: tickers});\n          }).catch(error => {\n            console.log(error);\n          });\n    }\n    \n    render(){\n\n        console.log(this.state.tickers)\n\n        return (\n            <div>\n            <select>\n              {this.state.tickers.map((ticker) => <option key={ticker.value} value={ticker.value}>{ticker.display}</option>)}\n            </select>\n          </div>\n        )\n    }\n}\n/*\n<div>\n                    <h1>Choose a stock to predict</h1>\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            Stock tickers\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {this.state.tickers}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    \n                </div>\n*/"]},"metadata":{},"sourceType":"module"}